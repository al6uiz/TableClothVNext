<Window xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:lang="clr-namespace:TableCloth3.Launcher.Languages"
		xmlns:vm="clr-namespace:TableCloth3.Launcher.ViewModels"
		xmlns:ui="clr-namespace:Avalonia.Input;assembly=Avalonia.Base"
		mc:Ignorable="d"
		Width="500" Height="400"
		x:Class="TableCloth3.Launcher.Windows.FolderManageWindow"
		x:DataType="vm:FolderManageWindowViewModel"
		Title="{x:Static lang:LauncherStrings.FolderManageWindowTitle}" WindowStartupLocation="CenterOwner" CanResize="False" Icon="avares:/Assets/Images/TableCloth.png">
	<Design.DataContext>
		<vm:FolderManageWindowViewModel />
	</Design.DataContext>
	<DockPanel Margin="20">
		<Label DockPanel.Dock="Top">
			<TextBlock Text="{x:Static lang:LauncherStrings.FolderManageWindowInstruction}" />
		</Label>

		<Grid Margin="0,10,0,0" DockPanel.Dock="Bottom">
			<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
				<Button Command="{Binding AddFolderButtonCommand}" Content="{x:Static lang:LauncherStrings.AddFoldersButton}" />
				<Button Command="{Binding RemoveFolderButtonCommand}" Content="{x:Static lang:LauncherStrings.RemoveFolderButton}" Margin="10,0" />
				<Button Command="{Binding ClearAllFoldersButtonCommand}" Content="{x:Static lang:LauncherStrings.ClearAllFoldersButton}" />
			</StackPanel>
			<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
				<Button Command="{Binding CloseButtonCommand}" Content="{x:Static lang:LauncherStrings.CloseManageWindow}" />
			</StackPanel>
		</Grid>
		<Border Margin="0,10,0,0" Background="{DynamicResource SolidBackgroundFillColorBaseBrush}" BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}" BorderThickness="1" CornerRadius="{DynamicResource ControlCornerRadius}">
			<ListBox x:Name="FolderList" ItemsSource="{Binding Folders}">
				<Interaction.Behaviors>
					<RoutedEventTriggerBehavior RoutedEvent="{x:Static ui:InputElement.DoubleTappedEvent}">
						<InvokeCommandAction Command="{Binding DoubleTappedCommand}" />
					</RoutedEventTriggerBehavior>
				</Interaction.Behaviors>
			</ListBox>
		</Border>
	</DockPanel>
</Window>
